package voronoiaoc.byg.common.world.feature.biomefeatures;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.block.SweetBerryBushBlock;
import net.minecraft.world.gen.blockplacer.ColumnBlockPlacer;
import net.minecraft.world.gen.blockplacer.DoublePlantBlockPlacer;
import net.minecraft.world.gen.blockplacer.SimpleBlockPlacer;
import net.minecraft.world.gen.blockstateprovider.SimpleBlockStateProvider;
import net.minecraft.world.gen.feature.BaseTreeFeatureConfig;
import net.minecraft.world.gen.feature.BlockClusterFeatureConfig;
import net.minecraft.world.gen.feature.HugeTreeFeatureConfig;
import net.minecraft.world.gen.feature.TreeFeatureConfig;
import net.minecraft.world.gen.foliageplacer.AcaciaFoliagePlacer;
import net.minecraft.world.gen.foliageplacer.BlobFoliagePlacer;
import net.minecraft.world.gen.foliageplacer.PineFoliagePlacer;
import net.minecraft.world.gen.foliageplacer.SpruceFoliagePlacer;
import net.minecraft.world.gen.treedecorator.AlterGroundTreeDecorator;
import net.minecraft.world.gen.treedecorator.BeehiveTreeDecorator;
import net.minecraft.world.gen.treedecorator.LeaveVineTreeDecorator;
import net.minecraft.world.gen.treedecorator.TrunkVineTreeDecorator;
import net.minecraftforge.common.IPlantable;
import voronoiaoc.byg.core.byglists.BYGBlockList;


public class BYGFeatureConfigs {
    public static final BlockClusterFeatureConfig PINKALLIUMBUSH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ALLIUM_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();


    //Plants
    public static final BlockClusterFeatureConfig ALLIUMBUSH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ALLIUM_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig AMARANTH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig PURPLEAMARANTH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig ORANGEAMARANTH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORANGE_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig MAGENTAAMARANTH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAGENTA_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig CYANAMARANTH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig SHORT_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SHORT_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(24).build();
    public static final BlockClusterFeatureConfig TALL_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.TALL_GRASS.getDefaultState()), new DoublePlantBlockPlacer())).tries(64).build();

    public static final BlockClusterFeatureConfig MINI_CACTUS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MINI_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(4).build();
    public static final BlockClusterFeatureConfig HORSEWEED_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.HORSEWEED.getDefaultState()), new SimpleBlockPlacer())).tries(4).build();
    public static final BlockClusterFeatureConfig TINY_LILYPAD_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TINY_LILYPADS.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig WATER_SILK_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WATER_SILK.getDefaultState()), new SimpleBlockPlacer())).tries(128).build();
    public static final BlockClusterFeatureConfig WINTER_SUCCULENT_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_SUCCULENT.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig BEACH_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BEACH_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(20).build();
    public static final BlockClusterFeatureConfig SHORT_BEACH_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SHORT_BEACH_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(20).build();
    public static final BlockClusterFeatureConfig WILTED_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WILTED_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig LEAF_PILE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LEAF_PILE.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();
    public static final BlockClusterFeatureConfig WEED_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WEED_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).func_227317_b_().build();
    public static final BlockClusterFeatureConfig WINTER_GRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig CALIFORNIA_POPPY_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CALIFORNIA_POPPY.getDefaultState()), new SimpleBlockPlacer())).tries(10).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig BLACK_PUFF_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLACK_PUFF.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;
    public static final BlockClusterFeatureConfig WEEPING_MILKCAP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WEEPING_MILKCAP.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;
    public static final BlockClusterFeatureConfig WOOD_BLEWIT_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WOOD_BLEWIT.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;
    public static final BlockClusterFeatureConfig GREEN_MUSHROOM_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GREEN_MUSHSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;
    public static final BlockClusterFeatureConfig BEGONIA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BEGONIA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig BISTORT_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BISTORT.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig GUZMANIA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GUZMANIA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig INCAN_LILY_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.INCAN_LILY.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig LAZARUS_BELLFLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LAZARUS_BELLFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig TORCH_GINGER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TORCH_GINGER.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig RICHEA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RICHEA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final BlockClusterFeatureConfig JAPANESEORCHID_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.JAPANESE_ORCHID.getDefaultState()), new DoublePlantBlockPlacer())).tries(10).func_227317_b_().build();
    public static final BlockClusterFeatureConfig AZALEA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.AZALEA.getDefaultState()), new DoublePlantBlockPlacer())).tries(48).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PRAIRIEGRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PRAIRIE_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig TALLPRAIRIEGRASS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TALL_PRAIRIE_GRASS.getDefaultState()), new DoublePlantBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig QUAGMIREDEADBUSH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.DEAD_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MUD_BRICKS.getBlock(), BYGBlockList.MUD_BLOCK.getBlock())).replaceable().func_227317_b_().build();
    public static final BlockClusterFeatureConfig BLUE_GLOWSHROOM_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUE_GLOWSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;
    public static final BlockClusterFeatureConfig PURPLE_GLOWSHROOM_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_GLOWSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).func_227317_b_().build();;

    public static final BlockClusterFeatureConfig PRICKLY_PEAR_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PRICKLY_PEAR_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(5).build();
    public static final BlockClusterFeatureConfig GOLDEN_SPINED_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GOLDEN_SPINED_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(5).build();


    public static final BlockClusterFeatureConfig CLOVER_PATCH = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CLOVER_PATCH.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();
    public static final BlockClusterFeatureConfig FLOWER_PATCH = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FLOWER_PATCH.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();

    public static final BlockClusterFeatureConfig WARPED_CACTUS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WARPED_CACTUS.getDefaultState()), new ColumnBlockPlacer(1, 2))).tries(10).func_227317_b_().build();

    //TropJungle
    public static final BaseTreeFeatureConfig TROPGROUNDBUSH_CONFIG = (new BaseTreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.EBONY_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.EBONY_LEAVES.getDefaultState()))).baseHeight(4).setSapling((IPlantable) BYGBlockList.EBONY_SAPLING).build();
    public static final HugeTreeFeatureConfig MEGATROPJUNGLETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.JUNGLE_LOG.getDefaultState()), new SimpleBlockStateProvider(Blocks.JUNGLE_LEAVES.getDefaultState()))).baseHeight(10).heightInterval(20).decorators(ImmutableList.of(new TrunkVineTreeDecorator(), new LeaveVineTreeDecorator())).setSapling((IPlantable) Blocks.JUNGLE_SAPLING).build();
    //Taiga
    public static final TreeFeatureConfig BLUEPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(1, 0))).baseHeight(7).heightRandA(4).trunkTopOffset(1).foliageHeight(3).foliageHeightRandom(1).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig BLUESPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(2, 1))).baseHeight(6).heightRandA(3).trunkHeight(1).trunkHeightRandom(1).trunkTopOffsetRandom(2).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig REDPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(1, 0))).baseHeight(7).heightRandA(4).trunkTopOffset(1).foliageHeight(3).foliageHeightRandom(1).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig REDSPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(2, 1))).baseHeight(6).heightRandA(3).trunkHeight(1).trunkHeightRandom(1).trunkTopOffsetRandom(2).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig YELLOWPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(1, 0))).baseHeight(7).heightRandA(4).trunkTopOffset(1).foliageHeight(3).foliageHeightRandom(1).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig YELLOWSPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(2, 1))).baseHeight(6).heightRandA(3).trunkHeight(1).trunkHeightRandom(1).trunkTopOffsetRandom(2).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig ORANGEPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(1, 0))).baseHeight(7).heightRandA(4).trunkTopOffset(1).foliageHeight(3).foliageHeightRandom(1).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final TreeFeatureConfig ORANGESPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(2, 1))).baseHeight(6).heightRandA(3).trunkHeight(1).trunkHeightRandom(1).trunkTopOffsetRandom(2).ignoreVines().setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig BLUEMEGASPRUCETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(13).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig BLUEMEGAPINETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(3).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig REDMEGASPRUCETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(13).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig REDMEGAPINETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(3).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig YELLOWMEGASPRUCETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(13).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig YELLOWMEGAPINETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(3).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig ORANGEMEGASPRUCETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(13).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    public static final HugeTreeFeatureConfig ORANGEMEGAPINETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()))).baseHeight(17).heightInterval(15).crownHeight(3).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    //Jacaranda
    public static final TreeFeatureConfig JACARANDATREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.JACARANDA_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.JACARANDA_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig TALLJACARANDATREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.JACARANDA_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.JACARANDA_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(9).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    //SeasonalBirch
    public static final TreeFeatureConfig REDBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig TALLREDBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).heightRandB(6).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig BROWNBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig TALLBROWNBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).heightRandB(6).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig ORANGEBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig TALLORANGEBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).heightRandB(6).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig YELLOWBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();
    public static final TreeFeatureConfig TALLYELLOWBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(5).heightRandA(2).heightRandB(6).foliageHeight(3).ignoreVines().decorators(ImmutableList.of(new BeehiveTreeDecorator(0.002F))).setSapling((IPlantable) Blocks.BIRCH_SAPLING).build();

    //Seasonal Oak
    public static final TreeFeatureConfig BROWNOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(4).heightRandA(2).foliageHeight(3).ignoreVines().setSapling((IPlantable) Blocks.OAK_SAPLING).build();
    public static final TreeFeatureConfig ORANGEOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(4).heightRandA(2).foliageHeight(3).ignoreVines().setSapling((IPlantable) Blocks.OAK_SAPLING).build();
    public static final TreeFeatureConfig REDOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(4).heightRandA(2).foliageHeight(3).ignoreVines().setSapling((IPlantable) Blocks.OAK_SAPLING).build();
    //Dover
    public static final HugeTreeFeatureConfig DOVERMEGASPRUCETREE_CONFIG = (new HugeTreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(Blocks.SPRUCE_LEAVES.getDefaultState()))).baseHeight(13).heightInterval(15).crownHeight(13).setSapling((IPlantable) Blocks.SPRUCE_SAPLING).build();
    //Red Oak
    public static final TreeFeatureConfig FANCY_RED_OAK_WITH_MORE_BEEHIVES_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(0, 0))).decorators(ImmutableList.of(new BeehiveTreeDecorator(0.05F))).setSapling((IPlantable)BYGBlockList.RED_OAK_SAPLING).build();
    //Maple
    public static final TreeFeatureConfig MAPLE_TREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAPLE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.MAPLE_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(4).heightRandA(2).foliageHeight(3).ignoreVines().setSapling((IPlantable)BYGBlockList.MAPLE_SAPLING).build();
    public static final TreeFeatureConfig RED_MAPLE_TREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAPLE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_MAPLE_LEAVES.getDefaultState()), new BlobFoliagePlacer(2, 0))).baseHeight(4).heightRandA(2).foliageHeight(3).ignoreVines().setSapling((IPlantable)BYGBlockList.RED_MAPLE_SAPLING).build();
    public static final TreeFeatureConfig FANCY_SILVER_MAPLE_WITH_MORE_BEEHIVES_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAPLE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.SILVER_MAPLE_LEAVES.getDefaultState()), new BlobFoliagePlacer(0, 0))).decorators(ImmutableList.of(new BeehiveTreeDecorator(0.05F))).setSapling((IPlantable)BYGBlockList.SILVER_MAPLE_SAPLING).build();
    public static final TreeFeatureConfig FANCY_MAPLE_WITH_MORE_BEEHIVES_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAPLE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.MAPLE_LEAVES.getDefaultState()), new BlobFoliagePlacer(0, 0))).decorators(ImmutableList.of(new BeehiveTreeDecorator(0.05F))).setSapling((IPlantable)BYGBlockList.MAPLE_SAPLING).build();
    public static final TreeFeatureConfig FANCY_RED_MAPLE_WITH_MORE_BEEHIVES_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAPLE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_MAPLE_LEAVES.getDefaultState()), new BlobFoliagePlacer(0, 0))).decorators(ImmutableList.of(new BeehiveTreeDecorator(0.05F))).setSapling((IPlantable)BYGBlockList.RED_MAPLE_SAPLING).build();


    private static final BlockState GRASS_BLOCK = Blocks.GRASS_BLOCK.getDefaultState();
    public static final BlockClusterFeatureConfig BLUEBERRY_BUSH_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUEBERRY_BUSH.getDefaultState().with(SweetBerryBushBlock.AGE, Integer.valueOf(3))), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig ROSE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig ANGELICA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ANGELICA.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig CROCUS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CROCUS.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig IRIS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IRIS.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig WHITE_ANEMONE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WHITE_ANEMONE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PINK_ANEMONE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ANEMONE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig WINTER_ROSE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK.getBlock(), GRASS_BLOCK.getBlock(), Blocks.SNOW.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig SNOWDROPS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SNOWDROPS.getDefaultState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK.getBlock(), GRASS_BLOCK.getBlock(), Blocks.SNOW.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PINK_ALLIUM_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ALLIUM.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig ORANGE_DAISY_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORANGE_DAISY.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig RED_CORNFLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_CORNFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig WHITE_SAGE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WHITE_SAGE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PURPLE_SAGE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_SAGE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig DELPHINIUM_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.DELPHINIUM.getDefaultState()), new DoublePlantBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig FOXGLOVE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FOXGLOVE.getDefaultState()), new DoublePlantBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig YELLOW_DAFFODIL_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.YELLOW_DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PUMPKIN_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.PUMPKIN.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), Blocks.PODZOL.getBlock(), Blocks.COARSE_DIRT.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig ALPINE_BELLFLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ALPINE_BELLFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig WINTER_SCILLA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_SCILLA.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig KOVAN_FLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.KOVAN_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig FIRECRACKER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FIRECRACKER_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();


    public static final BlockClusterFeatureConfig GREEN_TULIP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GREEN_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig CYAN_TULIP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig MAGENTA_TULIP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAGENTA_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PURPLE_TULIP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig YELLOW_TULIP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.YELLOW_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), Blocks.PODZOL.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();


    public static final BlockClusterFeatureConfig REEDS_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.REEDS.getDefaultState()), new DoublePlantBlockPlacer())).tries(64).func_227317_b_().requiresWater().build();
    public static final BlockClusterFeatureConfig CATTAIL_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CATTAIL.getDefaultState()), new DoublePlantBlockPlacer())).tries(64).func_227317_b_().requiresWater().build();

    public static final BlockClusterFeatureConfig RED_GLOWCANE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_GLOWCANE.getDefaultState()), new ColumnBlockPlacer(2, 3))).tries(32).xSpread(4).ySpread(0).zSpread(4).func_227317_b_().build();
    public static final BlockClusterFeatureConfig BLUE_GLOWCANE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUE_GLOWCANE.getDefaultState()), new ColumnBlockPlacer(2, 3))).tries(32).xSpread(4).ySpread(0).zSpread(4).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PURPLE_GLOWCANE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_GLOWCANE.getDefaultState()), new ColumnBlockPlacer(2, 3))).tries(32).xSpread(4).ySpread(0).zSpread(4).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PINK_GLOWCANE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_GLOWCANE.getDefaultState()), new ColumnBlockPlacer(2, 3))).tries(32).xSpread(4).ySpread(0).zSpread(4).func_227317_b_().build();

    public static final BlockClusterFeatureConfig LOLLI_POP_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LOLIPOP_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig RED_ORCHID_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PINK_ORCHID_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PURPLE_ORCHID_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig PEACH_LEATHER_FLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PEACH_LEATHER_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig VIOLET_LEATHER_FLOWER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.VIOLET_LEATHER_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();

    public static final BlockClusterFeatureConfig PINK_DAFFODIL_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig DAFFODIL_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig BLACK_ROSE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLACK_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig CYAN_ROSE_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig OSIRIA_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORSIRIA_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();
    public static final BlockClusterFeatureConfig FAIRYSLIPPER_CONFIG = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FAIRY_SLIPPER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK.getBlock(), BYGBlockList.OVERGROWN_DACITE.getBlock(), BYGBlockList.OVERGROWN_STONE.getBlock(), GRASS_BLOCK.getBlock())).func_227317_b_().build();

    public static final TreeFeatureConfig ACACIA_TREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.ACACIA_LOG.getDefaultState()), new SimpleBlockStateProvider(Blocks.ACACIA_LEAVES.getDefaultState()), new AcaciaFoliagePlacer(2, 0))).baseHeight(5).heightRandA(3).heightRandB(7).trunkHeight(5).ignoreVines().setSapling((IPlantable) Blocks.ACACIA_SAPLING).build();

    public static final BlockClusterFeatureConfig IVIS_ROOTS = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IVIS_ROOTS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final BlockClusterFeatureConfig IVIS_SPROUT = (new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IVIS_SPROUT.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();

}
