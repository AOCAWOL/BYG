package voronoiaoc.byg.common.world.feature.biomefeatures;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import net.minecraft.util.UniformInt;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SweetBerryBushBlock;
import net.minecraft.world.level.levelgen.Heightmap;
import net.minecraft.world.level.levelgen.feature.blockplacers.ColumnPlacer;
import net.minecraft.world.level.levelgen.feature.blockplacers.DoublePlantPlacer;
import net.minecraft.world.level.levelgen.feature.blockplacers.SimpleBlockPlacer;
import net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration;
import net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize;
import net.minecraft.world.level.levelgen.feature.foliageplacers.*;
import net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider;
import net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator;
import net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator;
import net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator;
import net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer;
import net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer;
import net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer;
import net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer;
import voronoiaoc.byg.core.byglists.BYGBlockList;

import java.util.OptionalInt;


public class BYGFeatureConfigs {
    //Plants
    public static final RandomPatchConfiguration TALL_ALLIUM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.TALL_ALLIUM.defaultBlockState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration TALL_PINK_ALLIUM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.TALL_PINK_ALLIUM.defaultBlockState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();

    public static final RandomPatchConfiguration PINKALLIUMBUSH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_ALLIUM_FLOWER_BUSH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ALLIUMBUSH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ALLIUM_FLOWER_BUSH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration AMARANTH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.AMARANTH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PURPLEAMARANTH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_AMARANTH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ORANGEAMARANTH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ORANGE_AMARANTH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration MAGENTAAMARANTH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.MAGENTA_AMARANTH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration CYANAMARANTH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CYAN_AMARANTH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration SHORT_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.SHORT_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(24).build();
    public static final RandomPatchConfiguration TALL_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(Blocks.TALL_GRASS.defaultBlockState()), new DoublePlantPlacer())).tries(64).build();
    public static final RandomPatchConfiguration SOULFIREONNYLIUM = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(Blocks.SOUL_FIRE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(Blocks.SOUL_SOIL, BYGBlockList.NYLIUM_SOUL_SOIL)).noProjection().build();

    public static final RandomPatchConfiguration MINI_CACTUS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.MINI_CACTUS.defaultBlockState()), new SimpleBlockPlacer())).tries(4).build();
    public static final RandomPatchConfiguration HORSEWEED_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.HORSEWEED.defaultBlockState()), new SimpleBlockPlacer())).tries(4).build();
    public static final RandomPatchConfiguration TINY_LILYPAD_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.TINY_LILYPADS.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration WATER_SILK_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WATER_SILK.defaultBlockState()), new SimpleBlockPlacer())).tries(128).build();
    public static final RandomPatchConfiguration WINTER_SUCCULENT_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WINTER_SUCCULENT.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration BEACH_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BEACH_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(20).build();
    public static final RandomPatchConfiguration SHORT_BEACH_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.SHORT_BEACH_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(20).build();
    public static final RandomPatchConfiguration WILTED_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WILTED_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchConfiguration LEAF_PILE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.LEAF_PILE.defaultBlockState()), new SimpleBlockPlacer())).tries(14).build();
    public static final RandomPatchConfiguration WEED_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WEED_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(32).noProjection().build();
    public static final RandomPatchConfiguration WINTER_GRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WINTER_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchConfiguration CALIFORNIA_POPPY_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CALIFORNIA_POPPY.defaultBlockState()), new SimpleBlockPlacer())).tries(10).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration BLACK_PUFF_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BLACK_PUFF.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();
    public static final RandomPatchConfiguration WEEPING_MILKCAP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WEEPING_MILKCAP.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();
    public static final RandomPatchConfiguration WOOD_BLEWIT_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WOOD_BLEWIT.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();
    public static final RandomPatchConfiguration GREEN_MUSHROOM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.GREEN_MUSHSHROOM.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();
    public static final RandomPatchConfiguration BEGONIA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BEGONIA.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration BISTORT_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BISTORT.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration GUZMANIA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.GUZMANIA.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration INCAN_LILY_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.INCAN_LILY.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration LAZARUS_BELLFLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.LAZARUS_BELLFLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration TORCH_GINGER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.TORCH_GINGER.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration RICHEA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.RICHEA.defaultBlockState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchConfiguration JAPANESEORCHID_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.JAPANESE_ORCHID.defaultBlockState()), new DoublePlantPlacer())).tries(10).noProjection().build();
    public static final RandomPatchConfiguration AZALEA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.AZALEA.defaultBlockState()), new DoublePlantPlacer())).tries(48).noProjection().build();
    public static final RandomPatchConfiguration PRAIRIEGRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PRAIRIE_GRASS.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration TALLPRAIRIEGRASS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.TALL_PRAIRIE_GRASS.defaultBlockState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration QUAGMIREDEADBUSH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(Blocks.DEAD_BUSH.defaultBlockState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MUD_BRICKS, BYGBlockList.MUD_BLOCK)).canReplace().noProjection().build();
    public static final RandomPatchConfiguration BLUE_GLOWSHROOM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BLUE_GLOWSHROOM.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();
    public static final RandomPatchConfiguration PURPLE_GLOWSHROOM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_GLOWSHROOM.defaultBlockState()), new SimpleBlockPlacer())).tries(18).noProjection().build();

    public static final RandomPatchConfiguration PRICKLY_PEAR_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PRICKLY_PEAR_CACTUS.defaultBlockState()), new SimpleBlockPlacer())).tries(5).build();
    public static final RandomPatchConfiguration GOLDEN_SPINED_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.GOLDEN_SPINED_CACTUS.defaultBlockState()), new SimpleBlockPlacer())).tries(5).build();


    public static final RandomPatchConfiguration PINK_CHERRY_FOLIAGE = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_CHERRY_FOLIAGE.defaultBlockState()), new SimpleBlockPlacer())).tries(24).build();
    public static final RandomPatchConfiguration WHITE_CHERRY_FOLIAGE = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WHITE_CHERRY_FOLIAGE.defaultBlockState()), new SimpleBlockPlacer())).tries(24).build();


    public static final RandomPatchConfiguration CLOVER_PATCH = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CLOVER_PATCH.defaultBlockState()), new SimpleBlockPlacer())).tries(14).build();
    public static final RandomPatchConfiguration FLOWER_PATCH = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.FLOWER_PATCH.defaultBlockState()), new SimpleBlockPlacer())).tries(14).build();

    public static final RandomPatchConfiguration WARPED_CACTUS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WARPED_CACTUS.defaultBlockState()), new ColumnPlacer(1, 2))).tries(10).noProjection().build();

    //    TropJungle
    public static final TreeConfiguration TROPGROUNDBUSH_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(BYGBlockList.EBONY_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.EBONY_LEAVES.defaultBlockState()), new BushFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(1), 2), new StraightTrunkPlacer(1, 0, 0), new TwoLayersFeatureSize(0, 0, 0))).heightmap(Heightmap.Types.MOTION_BLOCKING_NO_LEAVES).build();
    public static final TreeConfiguration MEGATROPJUNGLETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.JUNGLE_LOG.defaultBlockState()), new SimpleStateProvider(Blocks.JUNGLE_LEAVES.defaultBlockState()), new MegaJungleFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 2), new MegaJungleTrunkPlacer(10, 2, 19), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(TrunkVineDecorator.INSTANCE, LeaveVineDecorator.INSTANCE)).build();
    //Taiga
    public static final TreeConfiguration BLUEPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.defaultBlockState()), new PineFoliagePlacer(UniformInt.fixed(1), UniformInt.fixed(1), UniformInt.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration BLUESPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.defaultBlockState()), new SpruceFoliagePlacer(UniformInt.of(2, 1), UniformInt.of(0, 2), UniformInt.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration REDPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.defaultBlockState()), new PineFoliagePlacer(UniformInt.fixed(1), UniformInt.fixed(1), UniformInt.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration REDSPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.defaultBlockState()), new SpruceFoliagePlacer(UniformInt.of(2, 1), UniformInt.of(0, 2), UniformInt.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration YELLOWPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.defaultBlockState()), new PineFoliagePlacer(UniformInt.fixed(1), UniformInt.fixed(1), UniformInt.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration YELLOWSPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.defaultBlockState()), new SpruceFoliagePlacer(UniformInt.of(2, 1), UniformInt.of(0, 2), UniformInt.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration ORANGEPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.defaultBlockState()), new PineFoliagePlacer(UniformInt.fixed(1), UniformInt.fixed(1), UniformInt.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration ORANGESPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.defaultBlockState()), new SpruceFoliagePlacer(UniformInt.of(2, 1), UniformInt.of(0, 2), UniformInt.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeConfiguration BLUEMEGASPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration BLUEMEGAPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration REDMEGASPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration REDMEGAPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration YELLOWMEGASPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration YELLOWMEGAPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration ORANGEMEGASPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();
    public static final TreeConfiguration ORANGEMEGAPINETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundDecorator(new SimpleStateProvider(Blocks.PODZOL.defaultBlockState())))).build();

    //SeasonalBirch
    public static final TreeConfiguration REDBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration TALLREDBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration BROWNBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration TALLBROWNBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration ORANGEBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration TALLORANGEBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration YELLOWBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration TALLYELLOWBIRCHTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.BIRCH_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();

    //Seasonal Oak
    public static final TreeConfiguration BROWNOAKTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.OAK_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.BROWN_OAK_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration ORANGEOAKTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.OAK_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.ORANGE_OAK_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeConfiguration REDOAKTREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.OAK_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_OAK_LEAVES.defaultBlockState()), new BlobFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    //Dover
    public static final TreeConfiguration DOVERMEGASPRUCETREE_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.SPRUCE_LOG.defaultBlockState()), new SimpleStateProvider(Blocks.SPRUCE_LEAVES.defaultBlockState()), new MegaPineFoliagePlacer(UniformInt.fixed(0), UniformInt.fixed(0), UniformInt.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).build();
    //Red Oak
    public static final TreeConfiguration FANCY_RED_OAK_WITH_MORE_BEEHIVES_CONFIG = (new TreeConfiguration.TreeConfigurationBuilder(new SimpleStateProvider(Blocks.OAK_LOG.defaultBlockState()), new SimpleStateProvider(BYGBlockList.RED_OAK_LEAVES.defaultBlockState()), new FancyFoliagePlacer(UniformInt.fixed(2), UniformInt.fixed(4), 4), new FancyTrunkPlacer(3, 11, 0), new TwoLayersFeatureSize(0, 0, 0, OptionalInt.of(4)))).ignoreVines().heightmap(Heightmap.Types.MOTION_BLOCKING).build();

    private static final Block GRASS_BLOCK = Blocks.GRASS_BLOCK;
    public static final RandomPatchConfiguration BLUEBERRY_BUSH_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BLUEBERRY_BUSH.defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3))), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ROSE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ROSE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ANGELICA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ANGELICA.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration CROCUS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CROCUS.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration IRIS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.IRIS.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration WHITE_ANEMONE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WHITE_ANEMONE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PINK_ANEMONE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_ANEMONE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration WINTER_ROSE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WINTER_ROSE.defaultBlockState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK, GRASS_BLOCK, Blocks.SNOW)).noProjection().build();
    public static final RandomPatchConfiguration SNOWDROPS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.SNOWDROPS.defaultBlockState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK, GRASS_BLOCK, Blocks.SNOW)).noProjection().build();
    public static final RandomPatchConfiguration PINK_ALLIUM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_ALLIUM.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ORANGE_DAISY_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ORANGE_DAISY.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration RED_CORNFLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.RED_CORNFLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration WHITE_SAGE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WHITE_SAGE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PURPLE_SAGE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_SAGE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration DELPHINIUM_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.DELPHINIUM.defaultBlockState()), new DoublePlantPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration FOXGLOVE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.FOXGLOVE.defaultBlockState()), new DoublePlantPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration YELLOW_DAFFODIL_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.YELLOW_DAFFODIL.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PUMPKIN_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(Blocks.PUMPKIN.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, Blocks.PODZOL, Blocks.COARSE_DIRT, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration ALPINE_BELLFLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ALPINE_BELLFLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration WINTER_SCILLA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.WINTER_SCILLA.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration KOVAN_FLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.KOVAN_FLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration FIRECRACKER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.FIRECRACKER_FLOWER_BUSH.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();


    public static final RandomPatchConfiguration GREEN_TULIP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.GREEN_TULIP.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration CYAN_TULIP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CYAN_TULIP.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration MAGENTA_TULIP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.MAGENTA_TULIP.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PURPLE_TULIP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_TULIP.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration YELLOW_TULIP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.YELLOW_TULIP.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).noProjection().build();


    public static final RandomPatchConfiguration REEDS_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.REEDS.defaultBlockState()), new DoublePlantPlacer())).tries(64).noProjection().needWater().build();
    public static final RandomPatchConfiguration CATTAIL_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CATTAIL.defaultBlockState()), new DoublePlantPlacer())).tries(64).noProjection().needWater().build();

    public static final RandomPatchConfiguration RED_GLOWCANE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.RED_GLOWCANE.defaultBlockState()), new ColumnPlacer(2, 3))).tries(32).xspread(4).yspread(0).zspread(4).noProjection().build();
    public static final RandomPatchConfiguration BLUE_GLOWCANE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BLUE_GLOWCANE.defaultBlockState()), new ColumnPlacer(2, 3))).tries(32).xspread(4).yspread(0).zspread(4).noProjection().build();
    public static final RandomPatchConfiguration PURPLE_GLOWCANE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_GLOWCANE.defaultBlockState()), new ColumnPlacer(2, 3))).tries(32).xspread(4).yspread(0).zspread(4).noProjection().build();
    public static final RandomPatchConfiguration PINK_GLOWCANE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_GLOWCANE.defaultBlockState()), new ColumnPlacer(2, 3))).tries(32).xspread(4).yspread(0).zspread(4).noProjection().build();

    public static final RandomPatchConfiguration LOLLI_POP_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.LOLIPOP_FLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration RED_ORCHID_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.RED_ORCHID.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PINK_ORCHID_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_ORCHID.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PURPLE_ORCHID_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PURPLE_ORCHID.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration PEACH_LEATHER_FLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PEACH_LEATHER_FLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration VIOLET_LEATHER_FLOWER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.VIOLET_LEATHER_FLOWER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();

    public static final RandomPatchConfiguration PINK_DAFFODIL_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.PINK_DAFFODIL.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration DAFFODIL_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.DAFFODIL.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration BLACK_ROSE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.BLACK_ROSE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration CYAN_ROSE_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.CYAN_ROSE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration OSIRIA_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.ORSIRIA_ROSE.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();
    public static final RandomPatchConfiguration FAIRYSLIPPER_CONFIG = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.FAIRY_SLIPPER.defaultBlockState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).noProjection().build();

    public static final RandomPatchConfiguration IVIS_ROOTS = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.IVIS_ROOTS.defaultBlockState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchConfiguration IVIS_SPROUT = (new RandomPatchConfiguration.GrassConfigurationBuilder(new SimpleStateProvider(BYGBlockList.IVIS_SPROUT.defaultBlockState()), new SimpleBlockPlacer())).tries(32).build();

}
