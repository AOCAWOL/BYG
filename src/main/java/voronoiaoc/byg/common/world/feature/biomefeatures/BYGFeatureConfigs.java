package voronoiaoc.byg.common.world.feature.biomefeatures;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.SweetBerryBushBlock;
import net.minecraft.world.Heightmap;
import net.minecraft.world.gen.UniformIntDistribution;
import net.minecraft.world.gen.decorator.AlterGroundTreeDecorator;
import net.minecraft.world.gen.decorator.LeaveVineTreeDecorator;
import net.minecraft.world.gen.decorator.TrunkVineTreeDecorator;
import net.minecraft.world.gen.feature.JungleFoliagePlacer;
import net.minecraft.world.gen.feature.MegaPineFoliagePlacer;
import net.minecraft.world.gen.feature.RandomPatchFeatureConfig;
import net.minecraft.world.gen.feature.TreeFeatureConfig;
import net.minecraft.world.gen.feature.size.TwoLayersFeatureSize;
import net.minecraft.world.gen.foliage.*;
import net.minecraft.world.gen.placer.ColumnPlacer;
import net.minecraft.world.gen.placer.DoublePlantPlacer;
import net.minecraft.world.gen.placer.SimpleBlockPlacer;
import net.minecraft.world.gen.stateprovider.SimpleBlockStateProvider;
import net.minecraft.world.gen.trunk.GiantTrunkPlacer;
import net.minecraft.world.gen.trunk.LargeOakTrunkPlacer;
import net.minecraft.world.gen.trunk.MegaJungleTrunkPlacer;
import net.minecraft.world.gen.trunk.StraightTrunkPlacer;
import voronoiaoc.byg.core.byglists.BYGBlockList;

import java.util.OptionalInt;


public class BYGFeatureConfigs {
    //Plants
    public static final RandomPatchFeatureConfig TALL_ALLIUM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TALL_ALLIUM.getDefaultState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig TALL_PINK_ALLIUM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TALL_PINK_ALLIUM.getDefaultState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();

    public static final RandomPatchFeatureConfig PINKALLIUMBUSH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ALLIUM_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ALLIUMBUSH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ALLIUM_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig AMARANTH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLEAMARANTH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ORANGEAMARANTH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORANGE_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig MAGENTAAMARANTH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAGENTA_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig CYANAMARANTH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_AMARANTH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig SHORT_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SHORT_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(24).build();
    public static final RandomPatchFeatureConfig TALL_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.TALL_GRASS.getDefaultState()), new DoublePlantPlacer())).tries(64).build();
    public static final RandomPatchFeatureConfig SOULFIREONNYLIUM = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SOUL_FIRE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(Blocks.SOUL_SOIL, BYGBlockList.NYLIUM_SOUL_SOIL)).cannotProject().build();


    public static final RandomPatchFeatureConfig MINI_CACTUS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MINI_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(4).build();
    public static final RandomPatchFeatureConfig HORSEWEED_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.HORSEWEED.getDefaultState()), new SimpleBlockPlacer())).tries(4).build();
    public static final RandomPatchFeatureConfig TINY_LILYPAD_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TINY_LILYPADS.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig WATER_SILK_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WATER_SILK.getDefaultState()), new SimpleBlockPlacer())).tries(128).build();
    public static final RandomPatchFeatureConfig WINTER_SUCCULENT_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_SUCCULENT.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig BEACH_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BEACH_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(20).build();
    public static final RandomPatchFeatureConfig SHORT_BEACH_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SHORT_BEACH_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(20).build();
    public static final RandomPatchFeatureConfig WILTED_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WILTED_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchFeatureConfig LEAF_PILE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LEAF_PILE.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();
    public static final RandomPatchFeatureConfig WEED_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WEED_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).cannotProject().build();
    public static final RandomPatchFeatureConfig WINTER_GRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchFeatureConfig CALIFORNIA_POPPY_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CALIFORNIA_POPPY.getDefaultState()), new SimpleBlockPlacer())).tries(10).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig BLACK_PUFF_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLACK_PUFF.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();
    public static final RandomPatchFeatureConfig WEEPING_MILKCAP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WEEPING_MILKCAP.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();
    public static final RandomPatchFeatureConfig WOOD_BLEWIT_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WOOD_BLEWIT.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();
    public static final RandomPatchFeatureConfig GREEN_MUSHROOM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GREEN_MUSHSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();
    public static final RandomPatchFeatureConfig BEGONIA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BEGONIA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig BISTORT_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BISTORT.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig GUZMANIA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GUZMANIA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig INCAN_LILY_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.INCAN_LILY.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig LAZARUS_BELLFLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LAZARUS_BELLFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig TORCH_GINGER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TORCH_GINGER.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig RICHEA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RICHEA.getDefaultState()), new SimpleBlockPlacer())).tries(10).build();
    public static final RandomPatchFeatureConfig JAPANESEORCHID_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.JAPANESE_ORCHID.getDefaultState()), new DoublePlantPlacer())).tries(10).cannotProject().build();
    public static final RandomPatchFeatureConfig AZALEA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.AZALEA.getDefaultState()), new DoublePlantPlacer())).tries(48).cannotProject().build();
    public static final RandomPatchFeatureConfig PRAIRIEGRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PRAIRIE_GRASS.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig TALLPRAIRIEGRASS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.TALL_PRAIRIE_GRASS.getDefaultState()), new DoublePlantPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig QUAGMIREDEADBUSH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.DEAD_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(100).whitelist(ImmutableSet.of(BYGBlockList.MUD_BRICKS, BYGBlockList.MUD_BLOCK)).canReplace().cannotProject().build();
    public static final RandomPatchFeatureConfig BLUE_GLOWSHROOM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUE_GLOWSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLE_GLOWSHROOM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_GLOWSHROOM.getDefaultState()), new SimpleBlockPlacer())).tries(18).cannotProject().build();

    public static final RandomPatchFeatureConfig PRICKLY_PEAR_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PRICKLY_PEAR_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(5).build();
    public static final RandomPatchFeatureConfig GOLDEN_SPINED_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GOLDEN_SPINED_CACTUS.getDefaultState()), new SimpleBlockPlacer())).tries(5).build();


    public static final RandomPatchFeatureConfig PINK_CHERRY_FOLIAGE = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_CHERRY_FOLIAGE.getDefaultState()), new SimpleBlockPlacer())).tries(24).build();
    public static final RandomPatchFeatureConfig WHITE_CHERRY_FOLIAGE = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WHITE_CHERRY_FOLIAGE.getDefaultState()), new SimpleBlockPlacer())).tries(24).build();


    public static final RandomPatchFeatureConfig CLOVER_PATCH = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CLOVER_PATCH.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();
    public static final RandomPatchFeatureConfig FLOWER_PATCH = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FLOWER_PATCH.getDefaultState()), new SimpleBlockPlacer())).tries(14).build();

    public static final RandomPatchFeatureConfig WARPED_CACTUS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WARPED_CACTUS.getDefaultState()), new ColumnPlacer(1, 2))).tries(10).cannotProject().build();

//    TropJungle
    public static final TreeFeatureConfig TROPGROUNDBUSH_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.EBONY_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.EBONY_LEAVES.getDefaultState()), new BushFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(1), 2), new StraightTrunkPlacer(1, 0, 0), new TwoLayersFeatureSize(0, 0, 0))).heightmap(Heightmap.Type.MOTION_BLOCKING_NO_LEAVES).build();
    public static final TreeFeatureConfig MEGATROPJUNGLETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.JUNGLE_LOG.getDefaultState()), new SimpleBlockStateProvider(Blocks.JUNGLE_LEAVES.getDefaultState()), new JungleFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 2), new MegaJungleTrunkPlacer(10, 2, 19), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(TrunkVineTreeDecorator.INSTANCE, LeaveVineTreeDecorator.INSTANCE)).build();
    //Taiga
    public static final TreeFeatureConfig BLUEPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(UniformIntDistribution.of(1), UniformIntDistribution.of(1), UniformIntDistribution.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig BLUESPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(UniformIntDistribution.of(2, 1), UniformIntDistribution.of(0, 2), UniformIntDistribution.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig REDPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(UniformIntDistribution.of(1), UniformIntDistribution.of(1), UniformIntDistribution.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig REDSPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(UniformIntDistribution.of(2, 1), UniformIntDistribution.of(0, 2), UniformIntDistribution.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig YELLOWPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(UniformIntDistribution.of(1), UniformIntDistribution.of(1), UniformIntDistribution.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig YELLOWSPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(UniformIntDistribution.of(2, 1), UniformIntDistribution.of(0, 2), UniformIntDistribution.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig ORANGEPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new PineFoliagePlacer(UniformIntDistribution.of(1), UniformIntDistribution.of(1), UniformIntDistribution.of(3, 1)), new StraightTrunkPlacer(6, 4, 0), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig ORANGESPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new SpruceFoliagePlacer(UniformIntDistribution.of(2, 1), UniformIntDistribution.of(0, 2), UniformIntDistribution.of(1, 1)), new StraightTrunkPlacer(5, 2, 1), new TwoLayersFeatureSize(2, 0, 2))).ignoreVines().build();
    public static final TreeFeatureConfig BLUEMEGASPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig BLUEMEGAPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BLUE_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig REDMEGASPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig REDMEGAPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig YELLOWMEGASPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig YELLOWMEGAPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig ORANGEMEGASPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();
    public static final TreeFeatureConfig ORANGEMEGAPINETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(3, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).decorators(ImmutableList.of(new AlterGroundTreeDecorator(new SimpleBlockStateProvider(Blocks.PODZOL.getDefaultState())))).build();

    //SeasonalBirch
    public static final TreeFeatureConfig REDBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig TALLREDBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig BROWNBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig TALLBROWNBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig ORANGEBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig TALLORANGEBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig YELLOWBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig TALLYELLOWBIRCHTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.BIRCH_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.YELLOW_BIRCH_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(5, 2, 6), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();

    //Seasonal Oak
    public static final TreeFeatureConfig BROWNOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.BROWN_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig ORANGEOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    public static final TreeFeatureConfig REDOAKTREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_OAK_LEAVES.getDefaultState()), new BlobFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(0), 3), new StraightTrunkPlacer(4, 2, 0), new TwoLayersFeatureSize(1, 0, 1))).ignoreVines().build();
    //Dover
    public static final TreeFeatureConfig DOVERMEGASPRUCETREE_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.SPRUCE_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.ORANGE_SPRUCE_LEAVES.getDefaultState()), new MegaPineFoliagePlacer(UniformIntDistribution.of(0), UniformIntDistribution.of(0), UniformIntDistribution.of(13, 4)), new GiantTrunkPlacer(13, 2, 14), new TwoLayersFeatureSize(1, 1, 2))).build();
    //Red Oak
    public static final TreeFeatureConfig FANCY_RED_OAK_WITH_MORE_BEEHIVES_CONFIG = (new TreeFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.OAK_LOG.getDefaultState()), new SimpleBlockStateProvider(BYGBlockList.RED_OAK_LEAVES.getDefaultState()), new LargeOakFoliagePlacer(UniformIntDistribution.of(2), UniformIntDistribution.of(4), 4), new LargeOakTrunkPlacer(3, 11, 0), new TwoLayersFeatureSize(0, 0, 0, OptionalInt.of(4)))).ignoreVines().heightmap(Heightmap.Type.MOTION_BLOCKING).build();

    private static final Block GRASS_BLOCK = Blocks.GRASS_BLOCK;
    public static final RandomPatchFeatureConfig BLUEBERRY_BUSH_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUEBERRY_BUSH.getDefaultState().with(SweetBerryBushBlock.AGE, Integer.valueOf(3))), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ROSE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ANGELICA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ANGELICA.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig CROCUS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CROCUS.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig IRIS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IRIS.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig WHITE_ANEMONE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WHITE_ANEMONE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PINK_ANEMONE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ANEMONE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig WINTER_ROSE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK, GRASS_BLOCK, Blocks.SNOW)).cannotProject().build();
    public static final RandomPatchFeatureConfig SNOWDROPS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.SNOWDROPS.getDefaultState()), new SimpleBlockPlacer())).tries(48).whitelist(ImmutableSet.of(Blocks.SNOW_BLOCK, GRASS_BLOCK, Blocks.SNOW)).cannotProject().build();
    public static final RandomPatchFeatureConfig PINK_ALLIUM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ALLIUM.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ORANGE_DAISY_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORANGE_DAISY.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig RED_CORNFLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_CORNFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig WHITE_SAGE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WHITE_SAGE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLE_SAGE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_SAGE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig DELPHINIUM_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.DELPHINIUM.getDefaultState()), new DoublePlantPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig FOXGLOVE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FOXGLOVE.getDefaultState()), new DoublePlantPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig YELLOW_DAFFODIL_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.YELLOW_DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PUMPKIN_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(Blocks.PUMPKIN.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, Blocks.PODZOL, Blocks.COARSE_DIRT, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig ALPINE_BELLFLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ALPINE_BELLFLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig WINTER_SCILLA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.WINTER_SCILLA.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig KOVAN_FLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.KOVAN_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig FIRECRACKER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FIRECRACKER_FLOWER_BUSH.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();


    public static final RandomPatchFeatureConfig GREEN_TULIP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.GREEN_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig CYAN_TULIP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig MAGENTA_TULIP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.MAGENTA_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLE_TULIP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig YELLOW_TULIP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.YELLOW_TULIP.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, Blocks.PODZOL, GRASS_BLOCK)).cannotProject().build();


    public static final RandomPatchFeatureConfig REEDS_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.REEDS.getDefaultState()), new DoublePlantPlacer())).tries(64).cannotProject().needsWater().build();
    public static final RandomPatchFeatureConfig CATTAIL_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CATTAIL.getDefaultState()), new DoublePlantPlacer())).tries(64).cannotProject().needsWater().build();

    public static final RandomPatchFeatureConfig RED_GLOWCANE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_GLOWCANE.getDefaultState()), new ColumnPlacer(2, 3))).tries(32).spreadX(4).spreadY(0).spreadZ(4).cannotProject().build();
    public static final RandomPatchFeatureConfig BLUE_GLOWCANE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLUE_GLOWCANE.getDefaultState()), new ColumnPlacer(2, 3))).tries(32).spreadX(4).spreadY(0).spreadZ(4).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLE_GLOWCANE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_GLOWCANE.getDefaultState()), new ColumnPlacer(2, 3))).tries(32).spreadX(4).spreadY(0).spreadZ(4).cannotProject().build();
    public static final RandomPatchFeatureConfig PINK_GLOWCANE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_GLOWCANE.getDefaultState()), new ColumnPlacer(2, 3))).tries(32).spreadX(4).spreadY(0).spreadZ(4).cannotProject().build();

    public static final RandomPatchFeatureConfig LOLLI_POP_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.LOLIPOP_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig RED_ORCHID_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.RED_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PINK_ORCHID_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PURPLE_ORCHID_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PURPLE_ORCHID.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig PEACH_LEATHER_FLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PEACH_LEATHER_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig VIOLET_LEATHER_FLOWER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.VIOLET_LEATHER_FLOWER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();

    public static final RandomPatchFeatureConfig PINK_DAFFODIL_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.PINK_DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig DAFFODIL_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.DAFFODIL.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig BLACK_ROSE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.BLACK_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig CYAN_ROSE_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.CYAN_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig OSIRIA_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.ORSIRIA_ROSE.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();
    public static final RandomPatchFeatureConfig FAIRYSLIPPER_CONFIG = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.FAIRY_SLIPPER.getDefaultState()), new SimpleBlockPlacer())).tries(64).whitelist(ImmutableSet.of(BYGBlockList.MEADOW_GRASSBLOCK, BYGBlockList.OVERGROWN_DACITE, BYGBlockList.OVERGROWN_STONE, GRASS_BLOCK)).cannotProject().build();

    public static final RandomPatchFeatureConfig IVIS_ROOTS = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IVIS_ROOTS.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();
    public static final RandomPatchFeatureConfig IVIS_SPROUT = (new RandomPatchFeatureConfig.Builder(new SimpleBlockStateProvider(BYGBlockList.IVIS_SPROUT.getDefaultState()), new SimpleBlockPlacer())).tries(32).build();

}
